- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'
- ignore_errors: '{{ ansible_check_mode }}'
  name: Install Docker packages.
  notify: restart docker
  package:
    name: '{{ docker_packages }}'
    state: '{{ docker_packages_state }}'
  when: ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian']
- ignore_errors: '{{ ansible_check_mode }}'
  name: Install Docker packages (with downgrade option).
  notify: restart docker
  package:
    allow_downgrade: true
    name: '{{ docker_packages }}'
    state: '{{ docker_packages_state }}'
  when: ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']
- ignore_errors: '{{ ansible_check_mode }}'
  name: Install docker-compose plugin.
  notify: restart docker
  package:
    name: '{{ docker_compose_package }}'
    state: '{{ docker_compose_package_state }}'
  when: docker_install_compose_plugin | bool == true and (ansible_version.full is version_compare('2.12', '<') or ansible_os_family not in ['RedHat', 'Debian'])
- ignore_errors: '{{ ansible_check_mode }}'
  name: Install docker-compose-plugin (with downgrade option).
  notify: restart docker
  package:
    allow_downgrade: true
    name: '{{ docker_compose_package }}'
    state: '{{ docker_compose_package_state }}'
  when: docker_install_compose_plugin | bool == true and ansible_version.full is version_compare('2.12', '>=') and ansible_os_family in ['RedHat', 'Debian']
- file:
    mode: 493
    path: /etc/docker
    state: directory
  name: Ensure /etc/docker/ directory exists.
  when: docker_daemon_options.keys() | length > 0
- copy:
    content: '{{ docker_daemon_options | to_nice_json }}'
    dest: /etc/docker/daemon.json
    mode: 420
  name: Configure Docker daemon options.
  notify: restart docker
  when: docker_daemon_options.keys() | length > 0
- ignore_errors: '{{ ansible_check_mode }}'
  name: Ensure Docker is started and enabled at boot.
  service:
    enabled: '{{ docker_service_enabled }}'
    name: docker
    state: '{{ docker_service_state }}'
  when: docker_service_manage | bool
- meta: flush_handlers
  name: Ensure handlers are notified now to avoid firewall conflicts.
- include_tasks: docker-compose.yml
  when: docker_install_compose | bool
- getent:
    database: group
    key: docker
    split: ':'
  name: Get docker group info using getent.
  when: docker_users | length > 0
- name: Check if there are any users to add to the docker group.
  set_fact:
    at_least_one_user_to_modify: true
  when:
    - docker_users | length > 0
    - item not in ansible_facts.getent_group["docker"][2]
  with_items: '{{ docker_users }}'
- include_tasks: docker-users.yml
  when: at_least_one_user_to_modify is defined
